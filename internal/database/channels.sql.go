// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: channels.sql

package database

import (
	"context"
)

const deleteChannel = `-- name: DeleteChannel :exec
DELETE FROM channels
WHERE channel_id = $1
RETURNING channel_id, channel_url, name
`

func (q *Queries) DeleteChannel(ctx context.Context, channelID string) error {
	_, err := q.db.ExecContext(ctx, deleteChannel, channelID)
	return err
}

const getChannelNameUrl = `-- name: GetChannelNameUrl :one
SELECT channel_url, name FROM channels
WHERE channel_id = $1
`

type GetChannelNameUrlRow struct {
	ChannelUrl string
	Name       string
}

func (q *Queries) GetChannelNameUrl(ctx context.Context, channelID string) (GetChannelNameUrlRow, error) {
	row := q.db.QueryRowContext(ctx, getChannelNameUrl, channelID)
	var i GetChannelNameUrlRow
	err := row.Scan(&i.ChannelUrl, &i.Name)
	return i, err
}

const insertChannel = `-- name: InsertChannel :one
INSERT INTO channels (channel_id, channel_url, name)
VALUES(
    $1,
    $2,
    $3
)
RETURNING channel_id, channel_url, name
`

type InsertChannelParams struct {
	ChannelID  string
	ChannelUrl string
	Name       string
}

func (q *Queries) InsertChannel(ctx context.Context, arg InsertChannelParams) (Channel, error) {
	row := q.db.QueryRowContext(ctx, insertChannel, arg.ChannelID, arg.ChannelUrl, arg.Name)
	var i Channel
	err := row.Scan(&i.ChannelID, &i.ChannelUrl, &i.Name)
	return i, err
}
